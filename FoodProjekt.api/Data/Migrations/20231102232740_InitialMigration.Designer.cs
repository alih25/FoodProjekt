// <auto-generated />
using System;
using FoodProjekt.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodProjekt.api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231102232740_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FoodProjekt.api.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "burgers.png",
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = 2,
                            Image = "dessert.png",
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 3,
                            Image = "drinks.png",
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 4,
                            Image = "pizza.png",
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = 5,
                            Image = "seafood.png",
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 6,
                            Image = "soup.png",
                            Name = "Soups"
                        },
                        new
                        {
                            Id = 7,
                            Image = "veg.png",
                            Name = "Vegetarian"
                        });
                });

            modelBuilder.Entity("FoodProjekt.api.Data.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OfferedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Offer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "OFF-50",
                            Description = "50 Percent on all food types",
                            Image = "femtio.png",
                            IsActive = true,
                            Name = "50 Percent Off",
                            OfferedValue = 50m,
                            Type = 1,
                            ValidTill = new DateTime(2023, 11, 10, 0, 27, 40, 252, DateTimeKind.Local).AddTicks(2118)
                        },
                        new
                        {
                            Id = 2,
                            Code = "SPEC-150",
                            Description = "Special offer on all food types",
                            Image = "special.png",
                            IsActive = true,
                            Name = "Special Offer",
                            OfferedValue = 150m,
                            Type = 0,
                            ValidTill = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Code = "UPTO-50",
                            Description = "Upto 50% OFF",
                            Image = "upto50.png",
                            IsActive = true,
                            MinAmount = 500m,
                            Name = "Upto 50% OFF",
                            OfferedValue = 50m,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "OFF-70",
                            Description = "70 Percent on all food types",
                            Image = "sjuttio.png",
                            IsActive = true,
                            Name = "70 Percent Off",
                            OfferedValue = 70m,
                            Type = 1,
                            ValidTill = new DateTime(2023, 11, 5, 0, 27, 40, 252, DateTimeKind.Local).AddTicks(2162)
                        },
                        new
                        {
                            Id = 5,
                            Code = "OFF-40",
                            Description = "40 Percent on all food types",
                            Image = "fyrtio.png",
                            IsActive = true,
                            Name = "40% SALE OFF",
                            OfferedValue = 40m,
                            Type = 1,
                            ValidTill = new DateTime(2023, 11, 7, 0, 27, 40, 252, DateTimeKind.Local).AddTicks(2163)
                        },
                        new
                        {
                            Id = 6,
                            Code = "OFF-30",
                            Description = "30 Percent on all food types",
                            Image = "trettio.png",
                            IsActive = true,
                            MinAmount = 300m,
                            Name = "SALE 30% OFF",
                            OfferedValue = 30m,
                            Type = 1,
                            ValidTill = new DateTime(2023, 12, 3, 0, 27, 40, 252, DateTimeKind.Local).AddTicks(2165)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
